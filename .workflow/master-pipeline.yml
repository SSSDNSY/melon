version: '1.0'
name: master-pipeline
displayName: MasterPipeline
triggers:
  trigger: auto
  push:
    branches:
      include:
        - master
stages:
  - name: compile
    displayName: 编译
    strategy: naturally
    trigger: auto
    steps:
      - step: build@maven
        name: build_maven
        displayName: 构建基础包
        jdkVersion: 8
        mavenVersion: 3.3.9
        commands:
          - ''
          - 'mvn -U -e -X  -B -T 1C clean package -Dmaven.test.skip=true '
        artifacts:
          - name: BUILD_ARTIFACT
            path:
              - ./
        caches:
          - ~/.m2
        strategy: {}
      - step: publish@general_artifacts
        name: publish_general_artifacts
        displayName: 上传制品
        dependArtifact: BUILD_ARTIFACT
        artifactName: melon-admin
        strategy: {}
        dependsOn: build_maven
  - name: release
    displayName: 发布
    strategy: naturally
    trigger: auto
    steps:
      - step: deploy@agent
        name: deploy_agent
        displayName: 主机部署
        hostGroupID:
          ID: fun.pengzh
          hostID:
            - 1868e3f5-0ea3-4558-b4a9-f4b865cbfc84
        deployArtifact:
          - source: build
            name: melon-admin
            target: ~/gitee_go/deploy
            dependArtifact: BUILD_ARTIFACT
        script:
          - '# 功能：部署脚本会在部署主机组的每台机器上执行'
          - '# 使用场景：先将制品包解压缩到指定目录中，再执行启动脚本deploy.sh，脚本示例地址：https://gitee.com/gitee-go/spring-boot-maven-deploy-case/blob/master/deploy.sh'
          - ' mkdir -p /root/jar'
          - ' tar zxvf ~/gitee_go/deploy/melon-admin.tar.gz -C /root/jar'
          - ' sh /root/deploy.sh restart'
          - ''
        notify: []
        strategy:
          retry: '0'
